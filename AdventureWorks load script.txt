///$tab Main
SET ThousandSep='.';
SET DecimalSep=',';
SET MoneyThousandSep='.';
SET MoneyDecimalSep=',';
SET MoneyFormat='$#.##0;$-#.##0';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD-MM-YYYY';
SET TimestampFormat='DD-MM-YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='es-CL';
SET CreateSearchIndexOnReload=1;
SET MonthNames='ene.;feb.;mar.;abr.;may.;jun.;jul.;ago.;sep.;oct.;nov.;dic.';
SET LongMonthNames='enero;febrero;marzo;abril;mayo;junio;julio;agosto;septiembre;octubre;noviembre;diciembre';
SET DayNames='lun.;mar.;mié.;jue.;vie.;sáb.;dom.';
SET LongDayNames='lunes;martes;miércoles;jueves;viernes;sábado;domingo';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';



///$tab Section
Customer:
LOAD
    CustomerKey,
    "Customer ID",
    Customer,
    CityCustomer,
    StateProvinceCustomer,
    CountryRegionCustomer,
    PostalCodeCustomer
FROM [lib://Qlik Sense - Lineage:DataFiles/Customer.qvd]
(qvd)
Where Customer <> '[Not Applicable]';
Store Customer into [lib://Qlik Sense - Lineage:DataFiles/Customer_WhereClientes.qvd] (qvd);

Data:
LOAD
    DateKeyUnion,
    "Date",
    "Fiscal Year",
    "Fiscal Quarter",
    "Month",
    "Full Date",
    MonthKey
FROM [lib://Qlik Sense - Lineage:DataFiles/Data.qvd]
(qvd);

Product:
LOAD
    ProductKey,
    SKU,
    Product,
    "Standard Cost",
    "Color",
    "List Price",
    Model,
    Subcategory,
    Category
FROM [lib://Qlik Sense - Lineage:DataFiles/Product.qvd]
(qvd);

Reseller:
LOAD
    ResellerKey,
    "Reseller ID",
    "Business Type",
    Reseller,
    City,
    "State-Province",
    "Country-Region",
    "Postal Code"
FROM [lib://Qlik Sense - Lineage:DataFiles/Reseller.qvd]
(qvd);

SalesOrder:
LOAD
    Channel,
    SalesOrderLineKey,
    "Sales Order",
    "Sales Order Line"
FROM [lib://Qlik Sense - Lineage:DataFiles/SalesOrder.qvd](qvd);

Sales_Territory:
LOAD
    SalesTerritoryKey,
    Region,
    Country,
    "Group"
FROM [lib://Qlik Sense - Lineage:DataFiles/Sales_Territory.qvd]
(qvd);

Sales:
LOAD
	DateKeyUnion,
    SalesOrderLineKey,
    ResellerKey,
    CustomerKey,
    ProductKey,
    OrderDateKey,
    DueDateKey,
    ShipDateKey,
    SalesTerritoryKey,
    "Order Quantity",
    "Unit Price",
    "Extended Amount",
    "Unit Price Discount Pct",
    "Product Standard Cost",
    "Total Product Cost",
    "Sales Amount"
FROM [lib://Qlik Sense - Lineage:DataFiles/Sales.qvd]
(qvd);



exit Script;

// LOAD
//     CustomerKey,
//     "Customer ID",
//     Customer,
//     City,
//     "State-Province",
//     "Country-Region",
//     "Postal Code"
// FROM [lib://Qlik Sense - Lineage:DataFiles/AdventureWorksSales.xls]
// (biff, embedded labels, table is Customer_data$);






///$tab Auto-generated section
///$autogenerated


Unqualify *;

__cityAliasesBase:
LOAD
	Alias AS [__City],
	geoKey AS [__geoKey],
	CountryCode AS [__CityCountryCode]
FROM [lib://Qlik Sense - Lineage:DataFiles/cityAliases.qvd]
(qvd);

__cityGeoBase:
LOAD
	geoKey AS [__geoKey],
	geoPoint AS [__GeoPoint]
FROM [lib://Qlik Sense - Lineage:DataFiles/cityGeo.qvd]
(qvd);

__countryAliasesBase:
LOAD
	Alias AS [__Country],
	ISO3Code AS [__ISO3Code]
FROM [lib://Qlik Sense - Lineage:DataFiles/countryAliases.qvd]
(qvd);

__countryGeoBase:
LOAD
	ISO3Code AS [__ISO3Code],
	ISO2Code AS [__ISO2Code],
	Polygon AS [__Polygon]
FROM [lib://Qlik Sense - Lineage:DataFiles/countryGeo.qvd]
(qvd);

__countryCodeAndCityName2Key:
MAPPING LOAD
	__CityCountryCode & __City,
	__geoKey
RESIDENT __cityAliasesBase;

__cityKey2GeoPoint:
MAPPING LOAD
	__geoKey,
	__GeoPoint
RESIDENT __cityGeoBase;

__countryName2IsoThree:
MAPPING LOAD
	__Country,
	__ISO3Code
RESIDENT __countryAliasesBase;

__countryCodeIsoThree2Polygon:
MAPPING LOAD
	__ISO3Code,
	__Polygon
RESIDENT __countryGeoBase;

[Customer_temp_397df148-5334-4637-a6c2-8cea274d]:
LOAD
	[CustomerKey],
	[Customer ID],
	[Customer],
	[CityCustomer],
	[StateProvinceCustomer],
	[CountryRegionCustomer],
	[PostalCodeCustomer],
	APPLYMAP( '__cityKey2GeoPoint', APPLYMAP( '__countryCodeAndCityName2Key', APPLYMAP( '__countryName2IsoThree', LOWER([CountryRegionCustomer])) & LOWER([CityCustomer])), '-') AS [Customer.CityCustomer_GeoInfo],
	APPLYMAP( '__countryCodeIsoThree2Polygon', APPLYMAP( '__countryName2IsoThree', LOWER([CountryRegionCustomer])), '-') AS [Customer.CountryRegionCustomer_GeoInfo]
RESIDENT [Customer];
DROP TABLE [Customer];

[Data_temp_7929bc28-6f84-9b50-06f9-f99ab91a]:
LOAD
	Date(Date#([DateKeyUnion], 'YYYYMMDD') ) AS [DateKeyUnion],
	[Date],
	[Fiscal Year],
	[Fiscal Quarter],
	[Month],
	[Full Date],
	[MonthKey],
	'-' AS [Extra_03b24fe3-2398-71d9-0d56-c8ebf030]
RESIDENT [Data];
DROP TABLE [Data];
DROP FIELD [Extra_03b24fe3-2398-71d9-0d56-c8ebf030];

[Reseller_temp_127e09ab-8037-f0d5-771a-476b6f42]:
LOAD
	[ResellerKey],
	[Reseller ID],
	[Business Type],
	[Reseller],
	[City],
	[State-Province],
	[Country-Region],
	[Postal Code],
	APPLYMAP( '__cityKey2GeoPoint', APPLYMAP( '__countryCodeAndCityName2Key', APPLYMAP( '__countryName2IsoThree', LOWER([Country-Region])) & LOWER([City])), '-') AS [Reseller.City_GeoInfo],
	APPLYMAP( '__countryCodeIsoThree2Polygon', APPLYMAP( '__countryName2IsoThree', LOWER([Country-Region])), '-') AS [Reseller.Country-Region_GeoInfo]
RESIDENT [Reseller];
DROP TABLE [Reseller];

[Sales_Territory_temp_949461ee-40a3-adbf-3984-5500bc5c]:
LOAD
	[SalesTerritoryKey],
	[Region],
	[Country],
	[Group],
	APPLYMAP( '__countryCodeIsoThree2Polygon', APPLYMAP( '__countryName2IsoThree', LOWER([Country])), '-') AS [Sales_Territory.Country_GeoInfo]
RESIDENT [Sales_Territory];
DROP TABLE [Sales_Territory];

[Sales_temp_f06ead7a-3da6-6ca2-8a8b-1c152f13]:
LOAD
	[ResellerKey],
	[SalesTerritoryKey],
	[SalesOrderLineKey],
	Date(Date#([DateKeyUnion], 'YYYYMMDD') ) AS [DateKeyUnion],
	[ProductKey],
	[CustomerKey],
	Date(Date#([OrderDateKey], 'YYYYMMDD') ) AS [OrderDateKey],
	Date(Date#([DueDateKey], 'YYYYMMDD') ) AS [DueDateKey],
	Date(Date#([ShipDateKey], 'YYYYMMDD') ) AS [ShipDateKey],
	[Order Quantity],
	[Unit Price],
	[Extended Amount],
	[Unit Price Discount Pct],
	[Product Standard Cost],
	[Total Product Cost],
	[Sales Amount],
	'-' AS [Extra_f6621845-96bc-c74a-78ca-c22bb67f]
RESIDENT [Sales];
DROP TABLE [Sales];
DROP FIELD [Extra_f6621845-96bc-c74a-78ca-c22bb67f];



TAG FIELD [CityCustomer] WITH '$geoname', '$relates_Customer.CityCustomer_GeoInfo';
TAG FIELD [Customer.CityCustomer_GeoInfo] WITH '$geopoint', '$hidden', '$relates_CityCustomer';
TAG FIELD [CountryRegionCustomer] WITH '$geoname', '$relates_Customer.CountryRegionCustomer_GeoInfo';
TAG FIELD [Customer.CountryRegionCustomer_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_CountryRegionCustomer';RENAME TABLE [Customer_temp_397df148-5334-4637-a6c2-8cea274d] to [Customer];

RENAME TABLE [Data_temp_7929bc28-6f84-9b50-06f9-f99ab91a] to [Data];

TAG FIELD [City] WITH '$geoname', '$relates_Reseller.City_GeoInfo';
TAG FIELD [Reseller.City_GeoInfo] WITH '$geopoint', '$hidden', '$relates_City';
TAG FIELD [Country-Region] WITH '$geoname', '$relates_Reseller.Country-Region_GeoInfo';
TAG FIELD [Reseller.Country-Region_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_Country-Region';RENAME TABLE [Reseller_temp_127e09ab-8037-f0d5-771a-476b6f42] to [Reseller];

TAG FIELD [Country] WITH '$geoname', '$relates_Sales_Territory.Country_GeoInfo';
TAG FIELD [Sales_Territory.Country_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_Country';RENAME TABLE [Sales_Territory_temp_949461ee-40a3-adbf-3984-5500bc5c] to [Sales_Territory];

RENAME TABLE [Sales_temp_f06ead7a-3da6-6ca2-8a8b-1c152f13] to [Sales];

DROP TABLES __cityAliasesBase, __cityGeoBase, __countryAliasesBase, __countryGeoBase;
[autoCalendar]: 
  DECLARE FIELD DEFINITION Tagged ('$date')
FIELDS
  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),
  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),
  Month($1) AS [Month] Tagged ('$month', '$cyclic'),
  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),
  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),
  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),
  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),
  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),
  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,
  Year(Today())-Year($1) AS [YearsAgo] ,
  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,
  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,
  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,
  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,
  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,
  Month(Today())-Month($1) AS [MonthRelNo] ,
  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,
  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,
  Week(Today())-Week($1) AS [WeekRelNo] ;

DERIVE FIELDS FROM FIELDS [DateKeyUnion], [Date], [OrderDateKey], [DueDateKey], [ShipDateKey] USING [autoCalendar] ;